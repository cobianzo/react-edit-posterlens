{"version":3,"sources":["posterlens-config-edit.js","components/App.js","components/AppDemoPosterlens.js","components/InputData.js","components/EditObject2.js","components/ListObjects.js","components/Widgets.js","helpers.js","components/ObjectInfo.js","components/AppEditPosterlens.js","index.js"],"names":["data","App","useEffect","console","log","window","PANOLENS","THREE","eval","stopAllAnimations","useState","location","hash","appMode","setAppMode","AppDemoPosterlens","refContainer","createRef","retrievedOptions","JSON","parse","localStorage","getItem","worlds","error","pl","document","querySelector","posterlens","viewer","panorama","addEventListener","panolensPanoInstance","scene","getScene","createViewer","className","onDoubleClick","onClick","id","ref","Input","p","wrapperUpdateObjectSingleData","value","theValue","input","deleteIfValue","fieldPair","option","scale","currentObject3D","x","updateObjectSingleData","name","type","InputGroup","Prepend","Text","label","extensions","dims","minWidth","maxWidth","minHeight","maxHeight","onChange","base64","imgPath","onError","errMsg","alert","Button","variant","e","Append","getOptionsByObject3D","onSubmit","preventDefault","currentTarget","FormControl","as","defaultValue","Form","Check","step","Group","defaultChecked","checkedValue","checked","uncheckedValue","target","key","options","Object","keys","map","viewInput","EditObject2","setImgPath","refImgPathInput","v","renderer","domElement","event","handlerPickupObject","selectedObj","newPos","getMouse3Dposition","Vector3","normalize","multiplyScalar","distance","y","z","setObjectPos","handlerDropObject","handlerScaleRotateObject","plOptions","isEditMode","shiftIsPressed","intersects","raycaster","intersectObject","theObj","object","startsWith","camera","position","distanceTo","OrbitControls","enabled","originalPos","selectObject","singleObject3DToParams","lastSelectedObj","ctrlKey","set","editParams","SCALE_FACTOR","rotation","ROTATE_DEG","z_move","constructor","setInfo","setCurrentObject3D","waitSave","clearTimeout","setTimeout","object3D","direction","offset","clone","warn","panoList","forEach","world","inputs","active","Container","style","marginTop","role","aria-label","current","Row","inputsCol","col_i","Col","sm","i","includes","ListObjects","init","setInit","getCurrentPanoramaParams","hotspots","element","getObjectByName","getCameraDirection","join","Math","round","fov","objectsToPopupWhenVisible","k","min","max","Widgets","isWidgetsInit","setIsWidgetsInit","appendControlItem","backgroundImage","float","onTap","updateIsEdit","setIsEditMode","group","Array","from","initNewObject","newObj","objectData","countResets","params","floor","random","pos","values","getWorldDirection","image","posterSphere","text","sprite","fontFamily","createNewObjectFromParams","worldParams","push","newPlOptions","plOptionsReplaceWorldParams","setPlOptions","round2","fl","numb","toFixed","ObjectInfo","currentObjectOptions","find","ht","alwaysLookatCamera","objectOptions","lines","stringify","split","jsx","line","currentObjectOptionsJSX","AppEditPosterlens","globalVars","POSTERLENS_CONTAINER_ID","currentMouse3DPosition","AUTO_START_EDIT_MODE","setEditParams","countRestarts","setCountRestarts","info","refContainerParent","setItem","length","point","getWorldPosition","sub","currentMP","assign","posterlensConfig","o","changePano","lso","selObj","restartViewer","innerHTML","currentWorldOptions","w","getCurrentPanoramaParamsIndex","findIndex","newOptions","plOptionsReplaceWorldParamsHotspot","currentWorldParams","getHotspotIndex","newHotspots","syncPlOptionsAndLocalStorage","exportStr","objectCurrentParams","objectNewParams","rot","defaults","mapParams","emissive","transparent","color","obFields","currentField","field","replace","hasOwnProperty","editMode","Fragment","textA","createElement","textContent","width","height","Modal","exportToTextarea","currentWorldOptionsIndex","newPlOptionsHotspots","hotspotIndex","splice","newO","remove","getChildByName","onMouseMove","fields","regenerate","objectHotspotIndex","newObject","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.66a0f1fa.chunk.js","sourcesContent":["var data = {\n  \"cameraFov\": 80,\n  \"worlds\": [\n    {\n      \"panorama\": \"resources/p2.jpg\",\n      \"name\": \"Hall\",\n      \"innerPanorama\": {\n        \"offset\": [\n          100,\n          0,\n          0\n        ]\n      },\n      \"hotspots\": [\n        {\n          \"type\": \"text-3d\",\n          \"text\": \"BECAUSE NEIGHBOURS MATTER\",\n          \"pos\": [\n            \"5.49\",\n            \"117.42\",\n            \"-246.92\"\n          ],\n          \"scale\": \"0.12\",\n          \"size\": 200,\n          \"animated\": \"always\",\n          \"name\": \"bigtext\",\n          \"fontFamily\": \"posterlens/assets/fonts/Century_Gothic_Regular.js\",\n          \"rot\": [\n            \"0.00\",\n            \"6.26\",\n            \"0.00\"\n          ],\n          \"alwaysLookatCamera\": true,\n          \"emissive\": 10030990,\n          \"transparent\": true,\n          \"popupWhenVisible\": true\n        },\n        {\n          \"name\": \"mujer\",\n          \"type\": \"poster3d\",\n          \"pos\": [\n            \"-6.45\",\n            \"-19.16\",\n            \"-41.26\"\n          ],\n          \"image\": \"resources/mujer-animada.png\",\n          \"modal\": \"resources/pdf.pdf\",\n          \"rot\": [\n            \"0.00\",\n            \"0.15\",\n            \"0.00\"\n          ],\n          \"scale\": \"11.28\",\n          \"alwaysLookatCamera\": true,\n          \"animatedMap\": \"3\",\n          \"animatedMapSpeed\": 1,\n          \"sprite\": true\n        },\n        {\n          \"name\": \"casita\",\n          \"type\": \"poster3d\",\n          \"pos\": [\n            \"200.31\",\n            \"-81.32\",\n            \"-444.27\"\n          ],\n          \"image\": \"resources/casita.png\",\n          \"rot\": [\n            \"0.00\",\n            \"5.86\",\n            \"0.00\"\n          ],\n          \"scale\": \"176.96\",\n          \"sprite\": true\n        },\n        {\n          \"name\": \"arboles\",\n          \"type\": \"poster3d\",\n          \"pos\": [\n            \"310.60\",\n            \"-101.54\",\n            \"-177.70\"\n          ],\n          \"image\": \"resources/natura.png\",\n          \"rot\": [\n            \"0.00\",\n            \"5.08\",\n            \"0.00\"\n          ],\n          \"scale\": \"16.12\",\n          \"alpha\": \"resources/natura-mask.jpg\",\n          \"alwaysLookatCamera\": false\n        },\n        {\n          \"name\": \"text-floor-environment\",\n          \"type\": \"text-3d\",\n          \"pos\": [\n            \"46.76\",\n            \"-87.49\",\n            \"-76.93\"\n          ],\n          \"image\": \"https://images-na.ssl-images-amazon.com/images/I/91ovrqFkzkL._RI_SX200_.jpg\",\n          \"fontFamily\": \"posterlens/assets/fonts/Century_Gothic_Regular.js\",\n          \"text\": \"Environment\",\n          \"rot\": [\n            \"-1.48\",\n            \"-0.00\",\n            \"-0.52\"\n          ],\n          \"scale\": \"0.10\",\n          \"emissive\": 16777215,\n          \"transparent\": true,\n          \"alwaysLookatCamera\": false,\n          \"opacity\": 0.34\n        },\n        {\n          \"name\": \"nube\",\n          \"type\": \"poster3d\",\n          \"pos\": [\n            \"228.42\",\n            \"194.72\",\n            \"-83.63\"\n          ],\n          \"image\": \"resources/cloud.png\",\n          \"rot\": [\n            \"0.00\",\n            \"5.06\",\n            \"-0.40\"\n          ],\n          \"scale\": \"6.85\",\n          \"alwaysLookatCamera\": true\n        },\n        {\n          \"name\": \"arbol verde\",\n          \"type\": \"poster3d\",\n          \"pos\": [\n            \"103.71\",\n            \"-17.52\",\n            \"-46.09\"\n          ],\n          \"image\": \"resources/tree-green.png\",\n          \"rot\": [\n            \"0.00\",\n            \"5.13\",\n            \"0.00\"\n          ],\n          \"scale\": \"21.82\",\n          \"sprite\": true,\n          \"popupWhenVisible\": true\n        },\n        {\n          \"name\": \"sun\",\n          \"type\": \"poster3d\",\n          \"rotationZ\": 50000,\n          \"animated\": \"always\",\n          \"pos\": [\n            \"239.95\",\n            \"140.49\",\n            \"-135.52\"\n          ],\n          \"image\": \"resources/sun.png\",\n          \"rot\": [\n            \"0.00\",\n            \"4.80\",\n            \"0.00\"\n          ],\n          \"scale\": \"96.70\",\n          \"alwaysLookatCamera\": false,\n          \"sprite\": true\n        },\n        {\n          \"name\": \"plane\",\n          \"type\": \"poster3d\",\n          \"pos\": [\n            \"308.03\",\n            \"103.99\",\n            \"40.81\"\n          ],\n          \"image\": \"resources/plane.png\",\n          \"rot\": [\n            \"0.42\",\n            \"4.58\",\n            \"0.60\"\n          ],\n          \"scale\": \"30.30\",\n          \"sprite\": true,\n          \"popupWhenVisible\": true\n        },\n        {\n          \"name\": \"bocadillo\",\n          \"type\": \"poster3d\",\n          \"pos\": [\n            \"-0.36\",\n            \"-8.29\",\n            \"-44.14\"\n          ],\n          \"animated\": \"hover\",\n          \"image\": \"resources/talk.png\",\n          \"rot\": [\n            \"0.00\",\n            \"0.01\",\n            \"0.00\"\n          ],\n          \"scale\": \"0.68\",\n          \"popupWhenVisible\": true\n        },\n        {\n          \"name\": \"mill stick\",\n          \"type\": \"poster3d\",\n          \"pos\": [\n            \"209.51\",\n            \"-78.41\",\n            \"-208.28\"\n          ],\n          \"image\": \"resources/mill-stick.png\",\n          \"rot\": [\n            \"0.00\",\n            \"5.49\",\n            \"0.00\"\n          ],\n          \"scale\": \"0.88\",\n          \"alwaysLookatCamera\": true\n        },\n        {\n          \"name\": \"mill spans\",\n          \"type\": \"poster3d\",\n          \"rotationZ\": 10000,\n          \"pos\": [\n            \"69.32\",\n            \"-11.88\",\n            \"-69.32\"\n          ],\n          \"image\": \"resources/mill-spans.png\",\n          \"rot\": [\n            \"0.00\",\n            \"5.50\",\n            \"0.29\"\n          ],\n          \"scale\": \"2.94\",\n          \"popupWhenVisible\": true\n        },\n        {\n          \"name\": \"cloned_mill spans\",\n          \"type\": \"poster3d\",\n          \"rotationZ\": 10000,\n          \"pos\": [\n            \"78.56\",\n            \"-18.17\",\n            \"-121.95\"\n          ],\n          \"image\": \"resources/ mill-spans.png\",\n          \"rot\": [\n            \"0.00\",\n            \"5.71\",\n            \"2.25\"\n          ],\n          \"scale\": \"5.34\",\n          \"popupWhenVisible\": true\n        },\n        {\n          \"name\": \"cloned_mill stick\",\n          \"type\": \"poster3d\",\n          \"pos\": [\n            \"159.54\",\n            \"-79.77\",\n            \"-247.90\"\n          ],\n          \"image\": \"resources/mill-stick.png\",\n          \"rot\": [\n            \"0.00\",\n            \"5.71\",\n            \"0.00\"\n          ],\n          \"scale\": \"0.88\",\n          \"alwaysLookatCamera\": true\n        }\n      ]\n    },\n    {\n      \"panorama\": \"resources/p2-flat.jpg\",\n      \"name\": \"Environment Pano\",\n      \"innerPanorama\": {\n        \"offset\": [\n          100,\n          0,\n          0\n        ]\n      },\n      \"hotspots\": [\n        {\n          \"name\": \"door back hall\",\n          \"type\": \"poster3d\",\n          \"pos\": [\n            -322.7607711174291,\n            155.8512377612073,\n            -300.92337515941523\n          ],\n          \"image\": \"resources/environment.jpg\",\n          \"sprite\": true,\n          \"rot\": [\n            0,\n            3.6526499654878397,\n            0\n          ],\n          \"scale\": 214.3588810000002,\n          \"animated\": \"always\",\n          \"hoverText\": \"Back\",\n          \"link\": \"Hall\"\n        }\n      ]\n    }\n  ]\n}\n\nexport default data;","import React, {useState, useEffect} from 'react'\nimport AppDemoPosterlens from './AppDemoPosterlens';\nimport AppEditPosterlens from './AppEditPosterlens';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport '../posterlens/posterlens.css';\n\n// config file (data)\nimport data from '../posterlens-config-edit';\n\nexport default function App() {\n  \n  useEffect( () => {\n    console.log(`THREE and PANOLENS: ${window.PANOLENS}`,window.THREE);\n    window.THREE = eval('THREE');\n    window.PANOLENS = eval('PANOLENS');\n    window.stopAllAnimations = window.stopAllAnimations;\n  }, []);\n\n  const [appMode, setAppMode] = useState(window.location.hash === '#edit'? 'edit' : 'demo');\n  \n\n//  return \"TESTING\";\n  return appMode === 'edit' ?  <AppEditPosterlens data={data} setAppMode={setAppMode} /> : \n                               <AppDemoPosterlens data={data} setAppMode={setAppMode} />;\n  \n}","import React, {useEffect, createRef} from 'react'\n\nfunction AppDemoPosterlens( { data, setAppMode } ) {\n    \n    var refContainer = createRef();\n\n    useEffect(() => {\n        console.log('hello from useEffect in App');\n        // create the interactive 3d viewer with posterlens\n        createViewer(data);\n      }, []);\n\n    // CALL to posTERLENS\n    function createViewer(data) {\n        var posterlensConfig = {}\n        if (!data) console.log('data variable not found.')\n        else posterlensConfig = data; // `data` is loaded with external file tat sets up `var data = {..}`\n            \n        // load from cache by default\n        var retrievedOptions = JSON.parse( localStorage.getItem('pl.o') ); //retrieve the object to load cache\n\n        data = (retrievedOptions?.worlds) ? retrievedOptions : data;\n        if (!data) {\n        console.error('No data loaded. Cant initialize');\n        return;\n        }\n\n        // CALL POSTERLENS\n        window.pl = document.querySelector('#posterlens-container').posterlens( data );\n        window.pl.viewer.panorama.addEventListener('load', (panolensPanoInstance) => {\n            console.log(`🎉🎉🎉🎉🎉🎉🎉🎉`, panolensPanoInstance);\n        });\n        window.scene = window.pl.viewer.getScene();\n    }\n\n\n\n    return (\n        <div className='container'>\n            <h1 onDoubleClick={()=> setAppMode('edit')} >Demo  \n                { window.location.hash === '#edit'? \n                    <button className='btn btn-sm btn-primary' onClick={ ()=> setAppMode('edit') }>Back</button>\n                    : null }\n            </h1> \n            <div className='posterlens-container' id='posterlens-container' ref={refContainer}></div>\n        </div>\n    )\n}\n\nexport default AppDemoPosterlens\n","import React from 'react'\n\nimport Button from 'react-bootstrap/Button';\n\nimport { FilePicker } from 'react-file-picker'\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\n\nexport default function Input(p) {\n\n    const wrapperUpdateObjectSingleData = function (value) {\n        let theValue = value === p.input.deleteIfValue ? null : value; // with this we will remove the option from the params.\n        const fieldPair = { [p.input.option] : theValue };\n        // special fields that need special treatment\n        if ( p.input.option === 'background' && theValue === '' ) fieldPair[p.input.option] = 'transparent'; // no bg color => background: 'transparent'\n        if ( p.input.option === 'sprite' && theValue === true ) fieldPair.scale = p.currentObject3D.scale.x * 10; // if we convert into sprite we better scale or it will look tiny\n        if ( p.input.option === 'sprite' && !theValue ) fieldPair.scale = p.currentObject3D.scale.x / 10; // the other way as well.\n        p.updateObjectSingleData( p.currentObject3D.name, fieldPair);\n    }\n\n    const viewInput = function() {\n        switch (p.input.type) {\n            case \"image\":\n                return <InputGroup >\n                    <InputGroup.Prepend> <InputGroup.Text>{p.input.label}</InputGroup.Text></InputGroup.Prepend>\n                    <FilePicker \n                extensions={['jpg', 'jpeg', 'png', 'gif', 'svg']}\n                dims={{minWidth: 100, maxWidth: 2500, minHeight: 100, maxHeight: 2500}}\n                onChange={base64 => p.updateObjectSingleData( p.currentObject3D.name, { [p.input.option]: p.imgPath+base64.name}) }\n                onError={ errMsg => alert(errMsg) }\n            >\n                <Button variant='primary'>\n                Select image\n                </Button >\n                </FilePicker>\n                <Button variant='danger' onClick={ (e) => { wrapperUpdateObjectSingleData(null) } }>\n                    Clear\n                </Button >\n                <InputGroup.Append> <InputGroup.Text>{p.getOptionsByObject3D(p.currentObject3D, p.input.option)}</InputGroup.Text></InputGroup.Append>\n                </InputGroup>\n            case \"input\":\n                return <form onSubmit={ (e) => { e.preventDefault(); wrapperUpdateObjectSingleData(e.currentTarget.querySelector('input').value) } }\n>\n                    <InputGroup>\n                        <InputGroup.Prepend> <InputGroup.Text>{p.input.label}</InputGroup.Text></InputGroup.Prepend>\n                        <FormControl as='input' defaultValue={p.getOptionsByObject3D(p.currentObject3D, p.input.option)}  />\n                        <InputGroup.Append><InputGroup.Text> {p.getOptionsByObject3D(p.currentObject3D, p.input.option)} </InputGroup.Text> </InputGroup.Append>\n                    </InputGroup>\n                </form>\n            case \"number\":\n                return  <form onSubmit={ (e) => { e.preventDefault(); wrapperUpdateObjectSingleData(e.currentTarget.querySelector('input').value) } }\n                                >\n                            <InputGroup>\n                                <InputGroup.Prepend> <InputGroup.Text>{p.input.label}</InputGroup.Text></InputGroup.Prepend>\n                                <Form.Check type=\"number\" step={ p.input.step?? 1 }\n                                    defaultValue={p.getOptionsByObject3D(p.currentObject3D, p.input.option)} />\n                                <InputGroup.Append><InputGroup.Text> {p.getOptionsByObject3D(p.currentObject3D, p.input.option)} </InputGroup.Text> </InputGroup.Append>\n                            </InputGroup>\n                        </form>\n            case \"checkbox\":\n                return <Form.Group >\n                <Form.Check type=\"checkbox\" label={p.input.label + `(${p.getOptionsByObject3D(p.currentObject3D, p.input.option)})`}\n                            defaultChecked={p.getOptionsByObject3D(p.currentObject3D, p.input.option) === p.input.checkedValue() || p.input.deleteIfValue === p.input.checkedValue() }\n                                onChange={ (e) => {\n                                    const value = e.currentTarget.checked? p.input.checkedValue(p.currentObject3D) : p.input.uncheckedValue(p.currentObject3D) ;\n                                    wrapperUpdateObjectSingleData(value);                                            \n                                } } />\n                </Form.Group>\n            case \"select\":\n                return <InputGroup>\n                     <InputGroup.Prepend> <InputGroup.Text>{p.input.label}</InputGroup.Text></InputGroup.Prepend>\n                    <FormControl as='select' defaultValue={p.getOptionsByObject3D(p.currentObject3D, p.input.option)}\n                                        onChange={ (e) => wrapperUpdateObjectSingleData(e.target.value) }>\n                                <option key='nothing' value='' >---</option>\n                                {   \n                                    (typeof p.input.options === 'object') ? Object.keys(p.input.options)?.map( option => { \n                                        return <option key={option} value={ p.input.options[option] } >{ option }</option>\n                                    }) : null\n                                }\n                    </FormControl>\n                    <InputGroup.Append><InputGroup.Text> {p.getOptionsByObject3D(p.currentObject3D, p.input.option)} </InputGroup.Text> </InputGroup.Append>\n                </InputGroup>\n            default:\n            break;\n        }\n    }\n\n    return viewInput();\n}\n","import React, {useEffect, useState, createRef} from 'react';\n// import InputCommand from './InputCommand';\nimport InputData from './InputData';\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nfunction EditObject2( p ) {\n\n    const [imgPath, setImgPath] = useState('resources/');\n    const refImgPathInput = createRef();\n\n    // Important note. Inside a new EventListener, we can't access to updated props. The props will always have the initial value\n    // That's why I use window.selectedObj instead of p.currentObject3D, to access to the lastest Position.\n\n    // triggered on load, only once.\n    useEffect(() => { \n        if (!window.pl) return;\n        console.log('pl updated in edit', window.pl);\n        const v = window.pl.viewer;\n        v.renderer.domElement.addEventListener('mousedown', (event) => { handlerPickupObject(event) });\n\n        // --- move object \n        v.renderer.domElement.addEventListener('mousemove', function (event) {\n            if (!window.selectedObj) return;\n            let newPos = p.getMouse3Dposition(event, window.pl);\n            if (!newPos) return;\n            const v = new window.THREE.Vector3(...newPos).normalize().multiplyScalar(window.selectedObj.distance);\n            newPos = [v.x, v.y, v.z];\n            window.pl.setObjectPos(window.selectedObj, newPos);\n        });\n        v.renderer.domElement.addEventListener('mouseup', (event) => { handlerDropObject(event) });\n        document.addEventListener('keydown', (event) => { handlerScaleRotateObject(event) } );\n        \n    }, [p.plOptions] );\n\n    // --- pickup object \n    const handlerPickupObject = (event) => {\n        if ( !p.isEditMode ) return;\n        if (window.pl.shiftIsPressed) return;\n\n        const v = window.pl.viewer;\n        \n        const intersects = v.raycaster.intersectObject( v.panorama, true );\n        const theObj = intersects[0]? intersects[0].object : null ;\n        if (!theObj.type?.startsWith('pl_')) return;\n\n        theObj.distance = v.camera.position.distanceTo(theObj.position);\n        window.selectedObj = theObj;\n        console.log('Edit Object cLicked', window.selectedObj.name);\n        \n        v.OrbitControls.enabled = false;\n        window.selectedObj.originalPos = window.selectedObj.position;                \n        \n        // State: assign lastSelectedObj and update state currentObject3D\n        p.selectObject(theObj);\n    }\n\n    // --- drop object \n    const handlerDropObject = (event) => {  \n        if ( !p.isEditMode || !window.selectedObj) return;\n        if (!window.selectedObj.type.startsWith('pl_')) return;\n        const v = window.pl.viewer;\n        v.OrbitControls.enabled = true;\n        // p.singleObject3DToParams(window.selectedObj);\n        p.singleObject3DToParams(window.selectedObj);\n        window.selectedObj = null;\n    };\n\n    const handlerScaleRotateObject = function(event) {\n        // we cant use the state currentObject3D, because it will not get the latest value. It will be initialzied to the time of creation og this handler\n        if (!window.lastSelectedObj) return;\n        if (event.ctrlKey) {\n            switch (event.key) {\n                case '+': window.lastSelectedObj.scale.set( window.lastSelectedObj.scale.x * p.editParams.SCALE_FACTOR, window.lastSelectedObj.scale.y * p.editParams.SCALE_FACTOR, window.lastSelectedObj.scale.z * p.editParams.SCALE_FACTOR );      break;\n                case '-': window.lastSelectedObj.scale.set( window.lastSelectedObj.scale.x / p.editParams.SCALE_FACTOR, window.lastSelectedObj.scale.y / p.editParams.SCALE_FACTOR, window.lastSelectedObj.scale.z / p.editParams.SCALE_FACTOR );      break;\n                case 'r': window.lastSelectedObj.rotation.z += p.editParams.ROTATE_DEG;  break;\n                case 't': window.lastSelectedObj.rotation.z -= p.editParams.ROTATE_DEG;  break;\n                case 'f': window.lastSelectedObj.rotation.y += p.editParams.ROTATE_DEG;  break;\n                case 'g': window.lastSelectedObj.rotation.y -= p.editParams.ROTATE_DEG;  break;\n                case 'v': window.lastSelectedObj.rotation.x += p.editParams.ROTATE_DEG;  break;\n                case 'b': window.lastSelectedObj.rotation.x -= p.editParams.ROTATE_DEG;  break;\n                case '4': z_move(window.lastSelectedObj, 'close'); break;\n                case '5': z_move(window.lastSelectedObj, 'far'); break;\n                default:\n                    break;\n            }\n            if (event.key === 'r' || event.key === 't' || event.key === 'f' || event.key === 'g' || event.key === 'v' || event.key === 'b') {\n                if (window.lastSelectedObj.constructor.name === 'Infospot')\n                    p.setInfo('Sprite object cannot be rotated'); \n            }\n            p.setCurrentObject3D(window.lastSelectedObj);\n            if (window.waitSave) {\n                clearTimeout(window.waitSave);\n                window.waitSave = setTimeout( () => {\n                    p.singleObject3DToParams(window.lastSelectedObj);\n                    clearTimeout(window.waitSave);\n                    p.setInfo('updated');\n                }, 500);\n            }\n            \n        }\n    }\n\n    function z_move(object3D, direction = 'close'){\n        let offset = 1.02;\n        if (direction === 'close') offset = 1/offset;\n                    \n        var newPos = object3D.position.clone();\n        newPos.x *= offset; newPos.y *= offset; newPos.z *= offset;\n        const distance = window.pl.viewer.camera.position.distanceTo(newPos);\n        if ( (direction !== 'close' && distance > 500) || (direction === 'close' && distance < 40)) {\n            console.warn('we cant move that limit. Its out of 40 - 500m');\n            return\n        }\n        window.pl.setObjectPos(object3D, [newPos.x, newPos.y, newPos.z]);\n    }\n\n    \n    const panoList = {}; // for the `link` option\n    if (p.plOptions)\n    p.plOptions.worlds.forEach( world => panoList[world.name] = world.name  );\n    const inputs = [\n        [\n            { option: 'image', type: 'image', label:'Img', active: [ 'pl_poster3d' ], deleteIfValue:'' },\n            { option: 'alpha', type: 'image', label:'Alpha', active: [ 'pl_poster3d' ], deleteIfValue:'' },\n            { option: 'text', type: 'input', label:'Text', active: [ 'pl_text-2d', 'pl_text-3d'] },\n            \n            { option: 'background', type: 'input', label:'bg color (#ffffff)', active: [ 'pl_text-2d' ] },\n            { option: 'alwaysLookatCamera', type: 'checkbox', label:'alwaysLookatCamera', checkedValue: () => true, uncheckedValue: () => false, active: [ 'pl_text-2d', 'pl_text-3d', 'pl_poster3d' ], deleteIfValue: true },\n            { option: 'sprite', type: 'checkbox', label:'sprite 2D', checkedValue: () => true, uncheckedValue: () => null, active: [ 'pl_text-2d', 'pl_poster3d' ], deleteIfValue: false },\n            { option: 'posterSphere', type: 'checkbox', label:'is sphere', checkedValue: () => true, uncheckedValue: () => null, active: [ 'pl_text-2d', 'pl_poster3d' ], deleteIfValue: false },\n            { option: 'link', type: 'select', options: panoList, label:'Go to pano', active: [ 'pl_text-2d', 'pl_poster3d', 'pl_text-3d'], deleteIfValue: '' },\n            { option: 'modal', type: 'input', label:'modal', active: [ 'pl_poster3d', 'pl_text-2d', 'pl_text-3d'], deleteIfValue:'' },\n            { option: 'opacity', type: 'number', step: 0.05, label:'Opacity', active: [ 'pl_text-2d', 'pl_poster3d', 'pl_text-3d'], deleteIfValue: '1' },\n        ],\n        [\n        { option: 'animatedMap', type: 'number', label:'frames animation map', active: [ 'pl_poster3d' ], deleteIfValue: '' },\n        { option: 'animatedMapSpeed', type: 'number', label:'speed', active: [ 'pl_poster3d' ], deleteIfValue: '' },\n        { option: 'rotationX', type: 'number', label:'Rotate anim X', step: 100, active: [ 'pl_text-2d', 'pl_poster3d', 'pl_text-3d'], deleteIfValue: '' },\n        { option: 'rotationY', type: 'number', label:'Rotate anim Y', step: 100, active: [ 'pl_text-2d', 'pl_poster3d', 'pl_text-3d'], deleteIfValue: '' },\n        { option: 'rotationZ', type: 'number', label:'Rotate anim Z', step: 100, active: [ 'pl_text-2d', 'pl_poster3d', 'pl_text-3d'], deleteIfValue: '' },\n        { option: 'animated', type: 'select', label:'Glow animation', options: { 'always' : 'always', 'only on hover' : 'hover' }, active: [ 'pl_text-2d', 'pl_poster3d', 'pl_text-3d'], deleteIfValue: '' },\n        { option: 'popupWhenVisible', type: 'number', step: 100, label:'Pops up when in camera', active: [ 'pl_text-2d', 'pl_poster3d', 'pl_text-3d'], deleteIfValue: '' },\n        ]\n    ];\n    return (\n      <Container>\n        {p.currentObject3D? \n        <div className=\"position-absolute\" style={{ marginTop: '-30px'}}>\n            <span role=\"img\" aria-label='c'>⬆️</span>\n            { p.getOptionsByObject3D(p.currentObject3D, 'name') } <small>{p.getOptionsByObject3D(p.currentObject3D, 'type')}</small>\n            <form className='float-left' onSubmit={ (e)=> { \n                e.preventDefault();\n                const value = e.currentTarget.querySelector('input').value;\n                p.updateObjectSingleData( p.currentObject3D.name, { name: value} );\n                }}>\n            <FormControl as='input' defaultValue={ p.getOptionsByObject3D(p.currentObject3D, 'name') } />\n            </form>\n        </div> : null }\n            \n        <InputGroup>\n            <InputGroup.Prepend> <InputGroup.Text>imgs path</InputGroup.Text></InputGroup.Prepend>\n            <FormControl as='input' defaultValue={imgPath} ref={refImgPathInput} \n                        onChange={ (e) => refImgPathInput.current? setImgPath(refImgPathInput.current.value) : null } />\n            <InputGroup.Append><InputGroup.Text> {imgPath} </InputGroup.Text> </InputGroup.Append>\n        </InputGroup>\n        <Row>\n            {\n                inputs.map( (inputsCol, col_i) => {\n                    return <Col sm='6' key={'column-'+col_i}>\n                        { \n                            inputsCol.map( (input, i) => {\n                                if ( !p.currentObject3D ) return null;\n                                if ( !input.active.includes(p.currentObject3D.type) ) return null;\n                                return <InputData   input={input} imgPath={imgPath} key={'input-'+i}\n                                                    updateObjectSingleData={p.updateObjectSingleData} \n                                                    currentObject3D={p.currentObject3D}\n                                                    getOptionsByObject3D={p.getOptionsByObject3D} />\n                            } )\n                        }\n                    </Col>\n                })\n            }\n        </Row>\n        \n\n      </Container>        \n  );\n}\n\nexport default EditObject2;\n","import React, {useState, useEffect} from 'react'\n\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\n\nexport default function ListObjects(p) {\n    const [init, setInit] = useState(null);\n    useEffect(() => {\n        console.log('🚴🏼‍♀️Hello from ListObjects')\n        setInit(p.getCurrentPanoramaParams());\n    }, [p.plOptions])\n\n    const getObjectsShowWhenVisible = function() {\n        if (!window.pl) return 'not loaded';\n        if (!window.pl.viewer.panorama.objectsToPopupWhenVisible) return 'none';\n        const jsx = <div> {Object.keys(window.pl.viewer.panorama.objectsToPopupWhenVisible).map( k=>{\n            const [min,max] = window.pl.viewer.panorama.objectsToPopupWhenVisible[k];\n            return <p key={k}>{k} : {min}º, {max}º</p>;\n        })} </div>\n        return jsx;\n    }\n    return (\n        <Col className='list-objects' sm='2'>\n            List Hotposts in Pano Options\n            {init && p.plOptions?.worlds ? \n            <ul>\n                { init.hotspots.map((element,i) => {\n                    return <li key={i} onClick={ () => {\n                        // get object 3d\n                        const theObj = window.pl.getObjectByName(element.name);\n                        p.selectObject(theObj);\n                    }} className={ (p.currentObject3D?.name === element.name )? 'active' : '' }>\n                        {element.name} <small>{element.type}</small>\n                    </li>\n                })}\n            </ul>\n            : null }\n\n           <br/> { /** curiously this works, I dont need to use any State, it works ok with the pl object fn. \n                    *    It is because of the mousemove event in App.js. It makes recalculate this component aparently\n                    */}\n           Camera: { window.pl? window.pl.getCameraDirection('lookatPoint').join(', ')  : null }\n           <br/>\n           Angle: { window.pl? Math.round(window.pl.getCameraDirection('rad') * 100)/100 : null }\n             rad :: { window.pl? Math.round(window.pl.getCameraDirection('deg')) : null }º\n            <br/>\n            Fov: { window.pl? window.pl.viewer.camera.fov : null }\n            <br/>\n            <br/>\n            <i>Show if visible:</i> { init? getObjectsShowWhenVisible() : null }\n        </Col>\n    )\n}\n","import {useEffect, useState} from 'react';\n\n\nfunction Widgets( p ) {\n\n    const v = window.pl?.viewer;\n    const [isWidgetsInit, setIsWidgetsInit ] = useState(false);\n    const initWidgets = function() {\n        if (isWidgetsInit) return;\n        setIsWidgetsInit(true);\n        // Widgets\n        // Buttn to enable/disable Edit Mode: NOT IN USE\n        v.appendControlItem({\n            style: {\n                backgroundImage: 'url(https://images-na.ssl-images-amazon.com/images/I/91ovrqFkzkL._RI_SX200_.jpg)',\n                float: 'left'\n            },    \n            onTap: () => { \n                var updateIsEdit = !p.isEditMode;\n                p.setIsEditMode(updateIsEdit);\n                if (updateIsEdit && typeof window.stopAllAnimations !== 'undefined') window.stopAllAnimations(v);  \n                // p.exportOptions('input'); // console the new\n            },\n            group: 'editmode'\n        });\n        // Create poster buttons. One for every type.\n        Array.from([ /*'link', */\n                    'poster-sprite',\n                    'poster3d',\n                    'poster3d-sphere',\n                    'text-3d',\n                    'text-2d',\n                    'text-2d-sprite' \n            ] ).forEach( type => {\n                v.appendControlItem({\n                    id: 'edit-controls',\n                    style: {\n                        backgroundImage: 'url(resources/widget-'+type+'.png)',\n                        float: 'left'\n                    },    \n                    onTap: () => { \n                        const { newObj, objectData } = initNewObject( type );\n                        console.log('Created new obj: ', { newObj, objectData })\n                    },\n                    group: 'editmode'\n                });\n        })\n    }\n    useEffect(() => {\n        console.log('Hellow from widgets');\n        if (window.pl && p.isEditMode) \n            //if (!p.pl.viewer.widget) \n                initWidgets() // TODO: if deactivate and reactivate the editmode, the widgets are created again (duplicated)\n                // we can use pl.viewer.widget.barElement.remove() when deactivated to delete the previous ones. But ideally we could avoid calling this init if they exist.\n    }, [p.countResets]);\n\n\n\n    const initNewObject = function(type = 'poster3d') {\n        // get Scene by name:\n        const params = {\n            name:  `new_${type}_` + Math.floor(Math.random() * 10000),\n            type: type,\n            pos: Object.values(v.camera.getWorldDirection(new window.THREE.Vector3()).multiplyScalar(300)), // this normalizes but not to unitary, but to 300 long\n        }\n        switch (type) {\n            // case 'link': break;\n            case 'poster3d': \n                params.image = 'resources/poster3.jpg';\n            break;\n            case 'poster3d-sphere': \n                params.image = 'resources/poster3.jpg';\n                params.type = 'poster3d';\n                params.posterSphere = true;\n            break;\n             case 'poster-sprite': break;\n                params.sprite = true; \n            case 'text-2d': \n                params.text = \"New text\"; \n                break;\n            case 'text-2d-sprite': \n                params.text = \"New text\"; \n                params.sprite = true; \n                params.type = 'text-2d';\n                break;\n            case 'text-3d':\n                params.fontFamily = 'resources/fonts/Century_Gothic_Regular.js';\n                params.text = \"New text\";\n                break;\n            default: break;\n        }\n\n        // posterlens fn\n        window.pl.createNewObjectFromParams(v.panorama, params);\n\n        // update states object 3d in viewer & object params for posterlens\n        const newObj = window.pl.viewer.panorama.getObjectByName(params.name);\n        p.setCurrentObject3D(newObj);\n        // update posterlens option\n        \n        // update the option settings\n        let worldParams = p.getCurrentPanoramaParams();\n        worldParams.hotspots.push(params);\n        const newPlOptions = p.plOptionsReplaceWorldParams(worldParams);\n        p.setPlOptions(newPlOptions);\n        \n        \n        \n        return { newObj, params } ;\n    }\n\n  // its all vanilla js, connecting with panolens. No HTML\n  return (\n    null\n  );\n}\n\nexport default Widgets;\n","export function round2(fl) { \n    var numb = fl;\n    if (typeof numb === 'number')\n     numb = numb.toFixed(2);\n    return numb;\n    //return 0.001;\n }\n","import React from 'react'\nimport {round2} from '../helpers';\nexport default function ObjectInfo(p) {\n    // info in a panel of the object. Gets updated when the currentObject3D updates. It means , when it's clicked for instance.\n    function currentObjectOptions() {\n        if (!p.currentObject3D) return;\n        const worldParams = p.getCurrentPanoramaParams();\n        let objectOptions = worldParams.hotspots.find( ht => ht.name === p.currentObject3D?.name );\n        return objectOptions;\n    }\n    function currentObjectOptionsJSX() {\n        const objectOptions = currentObjectOptions();\n        var exportStr = objectOptions? JSON.stringify(objectOptions, false, 2) : 'no sel';\n        var lines = exportStr.split('\\n');\n        var jsx = [];\n        lines.forEach((line, i)=> { jsx.push(line); jsx.push(<br key={'return-'+i} />); } )\n        return jsx;\n    }\n    return (\n        <div className='object-info position-absolute'>\n            <h4>{p.currentObject3D?.name}<small> ({p.currentObject3D?.type})</small></h4>\n            Pos: {round2(p.currentObject3D?.position.x)} {round2(p.currentObject3D?.position.y)} {round2(p.currentObject3D?.position.z)}\n            <br/>\n            Rot: x {round2(p.currentObject3D?.rotation.x)} / y {round2(p.currentObject3D?.rotation.y)} / z {round2(p.currentObject3D?.rotation.z)}\n            { currentObjectOptions()?.alwaysLookatCamera? '(alwayslookatcamera)' : null }\n            <br/>\n            Scale: {round2(p.currentObject3D?.scale.x)} {round2(p.currentObject3D?.scale.y)} {round2(p.currentObject3D?.scale.z)}\n            \n            <br/>\n            <b>Object Info in options:</b> <br/>\n            {currentObjectOptionsJSX() }\n        </div>\n    )\n}\n","import React, {useState, useEffect, createRef} from 'react';\nimport EditObject2 from './EditObject2';\nimport ListObjects from './ListObjects';\nimport Widgets from './Widgets';\nimport ObjectInfo from './ObjectInfo';\nimport {round2} from '../helpers';\n\n// Bootstrap 4\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport default function AppEditPosterlens( { data, setAppMode, globalVars } ) {\n\n  // React states and refs\n  const [plOptions, setPlOptions] = useState();\n  const [currentObject3D, setCurrentObject3D] = useState(null);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [editParams, setEditParams] = useState( {\n    POSTERLENS_CONTAINER_ID: 'posterlens-container',\n    SCALE_FACTOR : 1.01,\n    ROTATE_DEG : 0.05, // radians. 3.1416 is 180 deg.\n    currentMouse3DPosition: [0,0,0],\n    AUTO_START_EDIT_MODE : 1,\n  } );\n  const [countRestarts, setCountRestarts] = useState(0);\n  const [info, setInfo] = useState('');\n\n  var refContainer = createRef();\n  var refContainerParent = createRef();\n\n  \n\n\n\n  // React Life cycle. INIT\n  \n  useEffect(() => {\n    console.log('hello from useEffect in App');\n    // create the interactive 3d viewer with posterlens\n    createViewer();\n    setCountRestarts(1); // small helper\n  }, []);\n  \n  // called on init and restart\n  useEffect(() => {\n    // initialize this react plugin to make that viewer interactive.\n    if (window.pl)\n      if (editParams.AUTO_START_EDIT_MODE) \n        setIsEditMode(true);\n  }, [countRestarts]);\n\n  //  a simple msg\n  useEffect( () => {\n    if (info !== '') setTimeout( () => setInfo(''), 2000 );\n  }, [info])\n\n  useEffect( () => {\n    if (!currentObject3D) return;\n    \n    localStorage.setItem('lastSelectedObj.name', currentObject3D.name);\n    // currentObject3D.material.blending = 2;\n  }, [currentObject3D])\n  \n  // Methods helpers\n\n  // x,y,z of mouse inside the 3d world. posterlens has this functions, but it doesnt work if I call it in onmousemove.\n  const getMouse3Dposition = function(event) {\n    if (!window.pl) return\n    const v = window.pl.viewer;\n    if (!v) { console.warn('Cant retrieve mouse pos, not viewer defined'); return; }\n\n    const intersects = v.raycaster.intersectObject( v.panorama, true );\n    if ( intersects.length <= 0 ) return;\n    let i = 0;\n    while ( i < intersects.length ) {\n        if (intersects[i].object.name === 'invisibleWorld') {\n            const point = intersects[i].point.clone();\n            const world = v.panorama.getWorldPosition( new window.THREE.Vector3() );\n            point.sub( world );\n            const currentMP = [ Math.round(point.x.toFixed(2)/2), Math.round(point.y.toFixed(2)/2), Math.round(point.z.toFixed(2)/2) ];\n            setEditParams( Object.assign( {}, editParams, { currentMouse3DPosition: currentMP } ) );\n            return currentMP;        \n            \n        }\n        i++;\n    }\n  }\n  \n  \n  // handlers\n\n    // CALL to posTERLENS\n  function createViewer() {\n    var posterlensConfig = {}\n    if (!data) console.log('data variable not found.')\n    else posterlensConfig = data; // `data` is loaded with external file tat sets up `var data = {..}`\n    \n    // load from cache by default\n    var retrievedOptions = JSON.parse( localStorage.getItem('pl.o') ); //retrieve the object to load cache\n//    console.log(retrievedOptions.worlds[0].hotspots[7].rot);\n    posterlensConfig = (retrievedOptions?.worlds) ? retrievedOptions : posterlensConfig;\n    if (!posterlensConfig) {\n      console.error('No data loaded. Cant initialize');\n      return;\n    }\n\n    // CALL POSTERLENS\n    window.pl = document.querySelector('#'+editParams.POSTERLENS_CONTAINER_ID).posterlens( posterlensConfig );\n    setPlOptions(window.pl.o);\n    window.pl.changePano(1);\n    window.pl.viewer.panorama.addEventListener('load', () => {\n      // init also selected obj if it was selected before\n      const lso = localStorage.getItem('lastSelectedObj.name');\n      if (lso) {\n        const selObj = window.pl.getObjectByName(lso);\n        if (selObj) setCurrentObject3D(selObj);\n      }\n      // Debug with chrome three inspector.\n      window.scene = window.pl.viewer.getScene();\n\n     if (isEditMode) window.stopAllAnimations(window.pl.viewer);\n\n    });\n  }\n\n  useEffect( () => { \n    window.pl.viewer.editMode = isEditMode;\n  }, [isEditMode]);\n  \n  function restartViewer() {\n    destroyViewer();\n    setPlOptions(null);\n    setIsEditMode(false);\n    delete(window.pl);\n    createViewer();\n    setCountRestarts(countRestarts + 1);\n    // and widgets are rerenderr because its key is associated to countRestarts, so they are loaded ok.\n  }\n\n  // helpers\n  function getOptionsByObject3D(object3D, option = null) {\n    const currentWorldOptions = getCurrentPanoramaParams();\n    let objectData = currentWorldOptions.hotspots.find( ht => ht.name === object3D?.name );\n    if (objectData && option) return objectData[option];\n    return objectData;\n  }\n  function getCurrentPanoramaParams() {\n    return plOptions.worlds.find( w => w.name === window.pl.viewer.panorama.name );\n  }\n  function getCurrentPanoramaParamsIndex() {\n    return plOptions.worlds.findIndex( w => w.name === window.pl.viewer.panorama.name );\n  }\n  // returns all pl with the new worldparmas at the place of the current panorama params\n  function plOptionsReplaceWorldParams(worldParams) {\n    const newOptions = Object.assign({}, plOptions);\n    newOptions.worlds[getCurrentPanoramaParamsIndex()] = {...worldParams};\n    return newOptions;\n  }\n  // returns all pl options replacing the hotspots in current panorama with that name\n  function plOptionsReplaceWorldParamsHotspot(name, objectData) {\n    const currentWorldParams = getCurrentPanoramaParams();\n    const getHotspotIndex   = currentWorldParams.hotspots.findIndex(ht => ht.name === name);\n    if ( getHotspotIndex < 0 ) return;\n    const newHotspots = [...currentWorldParams.hotspots];\n    newHotspots[getHotspotIndex] = objectData;\n    currentWorldParams.hotspots = newHotspots;\n    return plOptionsReplaceWorldParams(currentWorldParams);\n  }\n\n  function syncPlOptionsAndLocalStorage(plOptions) {\n    setPlOptions(plOptions);\n    var exportStr = JSON.stringify(plOptions, false, 2);\n    localStorage.setItem('pl.o', exportStr);\n    return exportStr;\n  }\n\n  // Object 3d in viewer ===> Options in pl.\n  // =======================> Options pl\n  function singleObject3DToParams(object3D) {\n  \n\n    // const worldParams = getCurrentPanoramaParams();\n    // let objectHotspotIndex = worldParams.hotspots.findIndex( ht => ht.name === object3D?.name );\n    // if (objectHotspotIndex < 0 ) {\n    //   // not found, we create it. This will never happen. And if it did , it would be wront. It should create more than a name.\n    //   worldParams.hotspots.push({ name: object3D.name });\n    //   objectHotspotIndex = worldParams.hotspots.length - 1;\n    //   //return;\n    // }\n\n    const objectCurrentParams = getOptionsByObject3D(object3D); // worldParams.hotspots[objectHotspotIndex];\n    const objectNewParams     = {...objectCurrentParams};\n\n    if (!objectCurrentParams) { alert('error: no objectCP'); return; }\n    // pos, scale and rot\n    objectNewParams.pos = [round2(object3D.position.x), round2(object3D.position.y), round2(object3D.position.z)];\n    objectNewParams.rot = [round2(object3D.rotation.x), round2(object3D.rotation.y), round2(object3D.rotation.z)];\n    // if (object3D.name === 'TEST') debugger\n    objectNewParams.scale = round2(object3D.scale.x);\n    // map params from object into options:\n\n    const defaults = { 'opacity': 1, 'animatedMap': 1 }\n    const mapParams = {\n      'opacity': 'material.opacity',\n      'type' : 'type',\n    }\n    \n    // special params for type\n    switch (object3D.type) {\n      case 'pl_text-3d': \n        mapParams.emissive = 'material.emissive';\n        mapParams.transparent = 'material.transparent';\n        break;\n      case 'pl_text-2d-sprite': \n      case 'pl_text-2d': \n        mapParams.color = 'material.color';\n        break;\n      case 'pl_poster3d': \n        // mapParams.animatedMap = 'material.transparent';\n      default:\n      break;\n    }\n\n    // foreach field in the object 3d we save it as an option param\n    Object.keys(mapParams).forEach( option => {\n      const obFields = mapParams[option].split('.');\n      var currentField = object3D; // currentField has the value in the object 3d. ie, for field opacity, it has 0.5\n      obFields.forEach( field => currentField = currentField[field] ); // currentfield = \"resources/img.jpg\"\n      // fix if it's a color (rgb object): convert into string\n      // if (currentField.hasOwnProperty('r') && currentField.hasOwnProperty('g')) currentField = currentField.getHexString();\n      // fix type. In object has prefix pl_\n      if (option==='type') currentField = currentField.replace('pl_', '');\n      // if (option==='background') currentField = currentField? currentField : 'transparent';\n      \n\n      if (currentField === null && objectNewParams.hasOwnProperty(option)) \n        delete(objectNewParams[option]);\n      else {\n        if (defaults.hasOwnProperty(option)) { // save only if it not default\n          if (defaults[option] != currentField) \n            objectNewParams[option] = currentField; // { \"image\" : \"resources/img.jpg\" }\n        } else\n          objectNewParams[option] = currentField;\n      }\n    } );\n\n    // params only in options and not visible from object 3D (we need a panel and an input to edit it)\n    // image, animatedMap, animatedMapSpeed, alwaysLookatCamera, text, hoverText, link\n    \n\n    // update pl with the new options\n    // const newOptions = Object.assign({}, plOptions);\n    // newOptions.worlds[getCurrentPanoramaParamsIndex()].hotspots[objectHotspotIndex] = objectNewParams;\n    const newOptions = plOptionsReplaceWorldParamsHotspot(object3D.name, objectNewParams);\n    syncPlOptionsAndLocalStorage(newOptions);\n    \n    return objectNewParams;\n\n  }\n\n  // when picking up the object iwth mouse or from list of objects.\n  function selectObject(theObj) {\n    if (!theObj) return false;\n    // if (currentObject3D) currentObject3D.material.blending = 1;\n    window.lastSelectedObj = theObj;\n    setCurrentObject3D( theObj );\n    // look at the object, I dont know how to do it\n  }\n\n  // remove from data and in viewer\n  function removeCurrentObject() {\n    if (!currentObject3D) return;\n    const currentWorldOptions = getCurrentPanoramaParams();\n    const currentWorldOptionsIndex = getCurrentPanoramaParamsIndex();\n    let objectHotspotIndex = currentWorldOptions.hotspots.findIndex( ht => ht.name === currentObject3D.name );\n    let newPlOptionsHotspots = [...currentWorldOptions.hotspots];\n    let hotspotIndex = newPlOptionsHotspots.findIndex( ht => ht.name === currentObject3D.name );\n    newPlOptionsHotspots.splice(hotspotIndex,1); //delte in array\n    const newO = {...plOptions};\n    newO.worlds[currentWorldOptionsIndex].hotspots = newPlOptionsHotspots;\n    syncPlOptionsAndLocalStorage(newO);\n    window.pl.viewer.panorama.remove( currentObject3D );\n    window.pl.viewer.panorama.remove( window.pl.viewer.scene.getChildByName(currentObject3D.name) ); // just in case (somethimes it doesn delete)\n    setCurrentObject3D(null);\n  }\n\n  // clone in data and reload the viewer.\n  function cloneCurrentObject() {\n    if (!currentObject3D) return;\n    const objectCurrentParams = Object.assign({}, getOptionsByObject3D(currentObject3D));\n    const currentWorldParams  = getCurrentPanoramaParams();\n    objectCurrentParams.name = \"cloned_\"+ objectCurrentParams.name;\n    objectCurrentParams.pos = [ objectCurrentParams.pos[0], objectCurrentParams.pos[1] + 50, objectCurrentParams.pos[2]]\n    currentWorldParams.hotspots.push(objectCurrentParams);\n    const newPlOptions = plOptionsReplaceWorldParams(currentWorldParams);\n    syncPlOptionsAndLocalStorage(newPlOptions);\n    // we need to restart the viewer to create it.\n    restartViewer();\n  }\n\n  // shows modal with all the options\n  function exportToTextarea() {\n    var exportStr = JSON.stringify(plOptions, false, 2);\n    var textA = document.createElement( 'textarea' );\n    textA.textContent = exportStr;\n    textA.style.width = '100%'\n    textA.style.height= '500px';\n    window.pl.Modal('Export JSON', textA);\n  }\n\n    // args (inputs) ===> Options data\n    // given name of object and updated fields in the way { link : \"Hall\" }, we update the p.currentObjectData and the worldOptions\n    // in some cases, sync the 3d model with the new data in the case of the name.\n    const updateObjectSingleData = function( name, fields = {}, regenerate = true ) { \n      \n      const currentWorldOptions = getCurrentPanoramaParams();\n      let objectHotspotIndex = currentWorldOptions.hotspots.findIndex( ht => ht.name === name );\n      if (objectHotspotIndex < 0 ) return;\n      // update the field\n      let objectData = currentWorldOptions.hotspots.find( ht => ht.name === name ); // all fields => { name: '', type: '' ... }\n      objectData = Object.assign({}, objectData, fields );\n      Object.keys(objectData).forEach( k =>  (objectData[k] === null)? delete(objectData[k]) : false ); // cleanup\n      const newPlOptions = plOptionsReplaceWorldParamsHotspot(name, objectData);\n      syncPlOptionsAndLocalStorage(newPlOptions);\n      \n      // regenerate the 3d object (remove and generate)\n      if (regenerate) {\n        const object = window.pl.getObjectByName(name);\n        if (name && window.pl.viewer.panorama && objectData ) {\n          window.pl.viewer.panorama.remove( object );\n          window.pl.createNewObjectFromParams(window.pl.viewer.panorama, objectData); // recreate the 3d in the viewer\n          const newObject = window.pl.getObjectByName(name);\n          setTimeout(()=>selectObject(newObject), 500);\n          \n        }\n        else {        \n          selectObject(object);\n        }\n      }\n  }\n\n\n\n\n  // remove all viewer. I should free up memory before...\n  function destroyViewer() {\n    document.querySelector('#'+editParams.POSTERLENS_CONTAINER_ID).innerHTML = '';\n  }\n\n  \n\n\n\n\n  return <React.Fragment>\n    { currentObject3D? <ObjectInfo currentObject3D={currentObject3D} getCurrentPanoramaParams={getCurrentPanoramaParams} /> : null }\n    { plOptions? <ListObjects currentObject3D={currentObject3D} plOptions={plOptions} selectObject={selectObject} \n                              setCurrentObject3D={setCurrentObject3D} getCurrentPanoramaParams={getCurrentPanoramaParams} /> : null }\n    <Container className='wrapper border pt-2' style={{ maxWidth:'1200px' }}>\n\n      { plOptions? \n        <Button className=\"btn-sm\" onClick={ e => restartViewer() }> RESET <span className=\"badge\">{countRestarts}</span> </Button>         : null } \n      { !isEditMode? \n        <Button className=\"btn-secondary ml-5 btn-sm\" onClick={ setIsEditMode(!isEditMode) }>Start Edit Mode</Button> : null } \n      { plOptions? \n        <Button className=\"btn btn-danger btn-sm\" onClick={ (e) => { localStorage.setItem('pl.o', null); restartViewer(); }  }>Clear cache </Button> : null }\n\n        <Button className=\"btn-secondary ml-5 btn-sm\" onClick={ () => exportToTextarea() }>Export</Button>\n\n        { currentObject3D? \n        <Button className=\"btn btn-danger btn-sm\" onClick={ removeCurrentObject }>Delete</Button> : null }\n        { currentObject3D? \n        <Button className=\"btn btn-success btn-sm\" onClick={ cloneCurrentObject }>Clone</Button> : null }\n\n        <Button variant=\"outline-primary btn-sm\" onClick={ (e)=> { window.stopAllAnimations(window.pl.viewer); e.target.remove() } }>Stop anim.</Button>\n        <Button variant=\"outline-secondary btn-sm\" onClick={ (e)=> setAppMode('demo') }>Demo</Button>\n\n      <Row className=\"no-gutters\" >\n        <Col sm={12}>\n          <div onMouseMove={ event => { getMouse3Dposition(event); } } ref={refContainerParent}>\n           <div  id={editParams.POSTERLENS_CONTAINER_ID} className='posterlens-container' ref={refContainer}> </div>\n          </div>\n        </Col>\n        { isEditMode? \n                   <EditObject2 plOptions={plOptions} isEditMode={isEditMode} editParams={editParams} currentObject3D={currentObject3D} setCurrentObject3D={setCurrentObject3D} getMouse3Dposition={getMouse3Dposition} \n                                singleObject3DToParams={singleObject3DToParams} setInfo={setInfo} updateObjectSingleData={updateObjectSingleData}\n                                getCurrentPanoramaParams={getCurrentPanoramaParams} selectObject={selectObject} getOptionsByObject3D={getOptionsByObject3D}  />\n                : null }\n      </Row>\n\n\n      \n\n      \n      \n      {/* <Button className=\"btn-warning\" onClick={ () => localStorage.setItem('worldOptions', JSON.stringify(worldOptions))  }>Update</Button> */}\n      <div className='info' style={ {color: 'red'} }>{ info }</div>\n\n      \n\n      { isEditMode? <Widgets plOptions={plOptions} isEditMode={isEditMode} setIsEditMode={setIsEditMode}  \n                              setCurrentObject3D={setCurrentObject3D} plOptions={plOptions} singleObject3DToParams={singleObject3DToParams}\n                              refContainer={refContainer}\n                              key={countRestarts} restartViewer={restartViewer}\n                              plOptionsReplaceWorldParams={plOptionsReplaceWorldParams}\n                              getCurrentPanoramaParams={getCurrentPanoramaParams} setPlOptions={setPlOptions}\n                              \n                              /> : null }\n    </Container>\n    </React.Fragment>\n}\n","// This is the call of the React APP.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}